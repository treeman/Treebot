# Command line options
-t --test
    Load test run. Don't connect through socket but load plugins at startup.
--dry
    Dry run. Don't connect through socket and don't load plugins. Otherwise act normally. Used for testing through stdin.
--run-tests
    Run test cases.
-v --verbose
    Log everything to files and stdout.
--log-verbose
    Stdout normally but log everything to file.
-b --bare
    Only log the bare essentials, strip everything else.
-B --show_bare
    Log normally but verbose logging to stdout.
-d --daemon
    Start as daemon

# Todo
*Better return handling for plugin handling
    For _all commands return how many plugins were affected
    Log error if something bad happens and better returning messages
    If nothing is loaded show a message
*Git pull from <somewhere>
    Check if core files have changed or just plugins files, then reload or restart
*Protect the other shared threadings perhaps? But perhaps they're fine where they are.
*Refactor hardcoded cmd lists
*Descriptive readme with command line options and stuff?
*Change logging level dynamically
*Need major cleanup at authing checking facility! Hacky random WHOIS messages without checking for duplicate sending. Deadlock not interely solved, it might reappear again outside of plugin cmd parsing (ie trying to bind a JOIN event and checking if the nick is auth and we haven't gotten any info on him). It should send an WHOIS on everyone it sees but it's nott fool proof. Need to clean up and set into nicer functions, might need to freeze and unfreeze on 318 and on specific nick too! Also add to check if nick is online.

# Bugs
*^C hangs on stdin getline, quits after enter (only sometimes?)
*Plugin::run_tests couldn't be run from a different thread (CoreTests::run_tests)
    My solution was to run the tests from the main thread
    It's strange because threaded cmd_workers can use Plugin functions just fine
*.is_auth? <botnick> doesn't work
*Plugins don't really reload, the classes are just the same. But the files are being reparsed..!
*Plugins deadlock if is_admin/is_auth is called and we doesn't have an entry yet. Then that thread will idle, but with the semaphore locked down. Later in the main loop when we're getting new messages we're trying to send them to plugins and then trying to lock down once again. Here we will freeze and cause a deadlock! Not fixed even if it works sometimes!
    -- It's sort of fixed, see Todo

# Implemented
*admin
    checking for admin commands
    force recheck when nick quits and joins
    follows nick change, check admin auth nick - not the normal one
    admin authed nicks set in config
*botsnack
*cmds
    add synnonym commands
    list all commands
*git
    current commit
*hello
*help
    general help
    individual help messages
*down? site
*id
*log
*monkey island insults and retorts
*nextep
*plugins
    commands for loading/unloading/reloading plugins dynamically!
    commands for checking what's loaded and what's possible to load
*status
*undocumented_cmds
*uptime
*restart

