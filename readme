# Command line options
--test -t
    Load test run. Don't connect through socket but load plugins at startup.
--dry
    Dry run. Don't connect through socket and don't load plugins.
    Otherwise act normally. Used for testing through stdin.
--run-tests
    Run test cases.
--verbose -v
    Log everything to files and stdout.
--log-verbose
    Stdout normally but log everything to file.
--bare -b
    Only log the bare essentials, strip everything else.
--show_bare -B
    Log normally but verbose logging to stdout.
--daemon -d
    Start as daemon
--no_show
    Don't log anything to stdout

# Todo
*Better return handling for plugin handling
    For "_all" commands return how many plugins were affected
    Log error if something bad happens and better returning messages
    If nothing is loaded show a message
*Git pull from <somewhere>
    Check if core files have changed or just plugins files, then reload or restart
*Protect the other shared threadings perhaps? But perhaps they're fine where they are.
*Refactor hardcoded cmd lists
*Change logging level dynamically
*Working tell
    Must have a way of checking if a user is online or not
    Otherwise bind to join
    Store/Retrieve from file on startup/shutdown
*Anti flood when sending a lot of info
*torrent
    Add option to list all torrents (without flooding)
    Add option to remove individual torrent
    Add total upload/download
    Add individual torrent stat

# Bugs
*^C hangs on stdin getline, quits after enter (only sometimes?)
*Plugin::run_tests couldn't be run from a different thread (CoreTests::run_tests)
    My solution was to run the tests from the main thread
    It's strange because threaded cmd_workers can use Plugin functions just fine
*Plugins don't really reload, the classes are just the same. But the files are being reparsed..!

# Implemented
*admin
    checking for admin commands
    force recheck when nick quits and joins
    follows nick change, check admin auth nick - not the normal one
    admin authed nicks set in config
*botsnack
*cmds for regular, admin, undoc
*git
    current commit
*hello
    supports different saluts
*help
    general help
    individual help messages
*down? site
*id
*log
*monkey island insults and retorts
*nextep
*plugins
    commands for loading/unloading/reloading plugins dynamically!
    commands for checking what's loaded and what's possible to load
*status
*torrent handling
*undocumented_cmds
*uptime
*restart
*whois?
    Check who/what swedish numbers belong to

